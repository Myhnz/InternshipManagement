@model InternshipManagement.Models.ProjectDetailViewModel
@{
    ViewBag.Title = "ProjectDetails";
    Layout = "~/Views/Shared/_LTELayout.cshtml";
}
<link href="~/AdminLTE/plugins/fullcalendar/main.css" rel="stylesheet" />
<script src="~/AdminLTE/plugins/fullcalendar/main.js"></script>
<script src="~/AdminLTE/plugins/fullcalendar/locales/vi.js"></script>
<link href="~/Content/InstructorPd.css" rel="stylesheet" />

<div class="container">
    <div class="project-detail">
        <h2 class="my-4">@Model.ProjectName</h2>
        <div class="row">
            <div class="col-md-3">
                <img src="@Model.CompanyLogo" class="img-fluid" alt="Company Logo" />
            </div>
            <div class="col-md-9">
                <h4>Company: @Model.CompanyName</h4>
                <h4>Instructor: @Model.InstructorName</h4>
            </div>
        </div>
        <div class="members my-4">
            <h3>Project Members</h3>
            <div class="row">
                @foreach (var member in Model.Members)
                {
                    <div class="col-md-2 text-center">
                        <img src="~/Content/AvatarImages/@member.Avatar" class="img-thumbnail mb-2 rounded-circle" alt="avt" />
                    </div>
                }
            </div>
        </div>

        <div id="calendar"></div>

    </div>
</div>
<div class="modal fade" id="taskModal" tabindex="-1" role="dialog" aria-labelledby="taskModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="taskModalLabel">Task Details</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <p>Date: <span id="taskDate"></span></p>
                <div class="form-group">
                    <label for="statusSelect">Status:</label>
                    <select class="form-control" id="statusSelect">
                        <option value="In Progress">In Progress</option>
                        <option value="Completed">Completed</option>
                        <option value="Pending">Pending</option>
                    </select>
                </div>
            </div>

            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>
@section Scripts {
    <script>
        // Check if the script has already been included
        if (!window.fullCalendarScriptLoaded) {
            window.fullCalendarScriptLoaded = true; // Mark the script as loaded

            document.addEventListener('DOMContentLoaded', function () {
                var calendarEl = document.getElementById('calendar');
                var calendar = new FullCalendar.Calendar(calendarEl, {
                    locale: 'vi',
                    initialView: 'dayGridMonth',
                    dayMaxEvents: 4,
                    events: function (fetchInfo, successCallback, failureCallback) {
                        var events = [];

                        @foreach (var task in Model.Tasks.Where(t => t.StartDate.HasValue))
                        {
                            var color = "#007bff"; // Default color
                            if (task.Status == "Completed")
                            {
                                color = "#28a745"; // Green color for completed tasks
                            }
                            <text>events.push({
                                title: '@task.Description' + ' (Start)',
                                start: '@task.StartDate.Value.ToString("yyyy-MM-dd")',
                                allDay: true,
                                color: '@color'
                            });</text>
                        }

                        @foreach (var task in Model.Tasks.Where(t => t.EndDate.HasValue))
                        {
                            var color1 = "#dc3545"; // Default color
                            if (task.Status == "Completed")
                            {
                                color1 = "#28a745"; // Green color for completed tasks
                            }
                            <text>events.push({
                                title: '@task.Description' + ' (End)',
                                start: '@task.EndDate.Value.ToString("yyyy-MM-dd")',
                                allDay: true,
                                color: '@color1'
                            });</text>
                        }

                        successCallback(events);
                    },
                    eventClick: function (info) {
                        showTaskModal(info.event.title, info.event.start, info.event.end, info.event.id);
                    }
                });
                calendar.render();

                function showTaskModal(title, start, end, taskId) {
                    // Lấy trạng thái của task từ tiêu đề sự kiện
                    var status = title.includes('Start') ? 'In Progress' : 'Completed';

                    $('#taskModal .modal-title').text(title);
                    $('#taskModal .modal-body').html(`
                        <p>Date: ${new Date(start).toDateString()}</p>
                        <input type="hidden" id="taskId" value="${taskId}" />
                        <div class="form-group">
                            <label for="statusSelect">Status:</label>
                            <select class="form-control" id="statusSelect">
                                <option value="In Progress" ${status === 'In Progress' ? 'selected' : ''}>In Progress</option>
                                <option value="Completed" ${status === 'Completed' ? 'selected' : ''}>Completed</option>
                                <option value="Pending" ${status === 'Pending' ? 'selected' : ''}>Pending</option>
                            </select>
                        </div>
                    `);
                    $('#taskModal').modal('show');
                }

                $('#updateStatusBtn').click(function () {
                    updateStatus();
                });

                function updateStatus() {
                    var taskId = $('#taskId').val();
                    var newStatus = $('#statusSelect').val();
                    $.ajax({
                        url: '/Student/UpdateStatus',
                        type: 'POST',
                        data: {
                            taskId: taskId,
                            newStatus: newStatus
                        },
                        success: function (response) {
                            if (response.success) {
                                console.log('Status updated successfully');
                                $('#taskModal').modal('hide');
                            } else {
                                console.error('Failed to update status');
                            }
                        },
                        error: function () {
                            console.error('Failed to update status. Server error.');
                        }
                    });
                }
            });
        }
    </script>
}
