@model InternshipManagement.Models.Company

<div class="modal-header">
    <h5 class="modal-title" id="editUserModalLabel">Chỉnh sửa công ty</h5>
    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
        <span aria-hidden="true">&times;</span>
    </button>
</div>

@using (Html.BeginForm("EditCompany", "Admin", FormMethod.Post, new { id = "editCompanyForm" }))
{
    @Html.AntiForgeryToken()
    <div class="modal-body">
        <div class="form-horizontal">
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            @Html.HiddenFor(model => model.CompanyID)

            <div class="form-group">
                @Html.LabelFor(model => model.CompanyName, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.CompanyName, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.CompanyName, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })
                @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
    <div class="modal-footer">
        <button type="button" class="btn btn-secondary" data-dismiss="modal">Đóng</button>
        <!-- Button to submit edited user data -->
        <button type="submit" value="Save" class="btn btn-primary" id="saveChangesButton">Lưu thay đổi</button>
    </div>
}

<script>
    $(document).ready(function () {
        $('#editCompanyForm').on('submit', function (e) {
            e.preventDefault();

            var fieldsToCheck = ["CompanyName", "Email", "Phone", "Address"];
            var formData = $(this).serialize();
            var company = {};
            $(this).serializeArray().map(function (x) { company[x.name] = x.value; });

            $.ajax({
                url: '@Url.Action("CheckErrors")',
                type: 'POST',
                data: { formData: company, fieldsToCheck: fieldsToCheck },
                success: function (response) {
                    $('.text-danger').text('');
                    $('.form-control').removeClass('is-invalid');

                    $.each(response, function (key, value) {
                        $('[name="' + key + '"]').addClass('is-invalid').next('.text-danger').text(value);
                    });

                    if ($.isEmptyObject(response)) {
                        $('#editCompanyForm').unbind('submit').submit();
                    }
                }
            });
        });
    });
</script>
